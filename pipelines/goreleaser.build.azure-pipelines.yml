---
name: goreleaser-dsv-cli-$(why).$(Date:yyyyMMdd)-$(Rev:r)
pr:
  autoCancel: true
  drafts: true # TODO: make this false for future runs
trigger:
  batch: true
  branches:
    include:
      - feat/448642/*
  paths:
    exclude:
      - .devcontainer/*
      - .github/*
      - '*.md'
      - '**/*.md'
parameters:
  - name: TIMEOUT_MIN
    type: number
    default: 15
  - name: debug
    type: boolean
    default: false
  - name: workingDirectory
    type: string
    default: $(Pipeline.Workspace)
variables:
  - group: 'CLI_integration_test' # TODO: replace with dsv cli calls
  - group: 'CLi-pipeline-variables' # TODO: replace with dsv cli calls
  - group: 'CLI End-to-End tests' # TODO: replace with dsv cli calls
  - group: GITHUB # to avoid api rate issues
  - template: templates/vars.common.yml

jobs:
  - job: BuildCLI
    strategy:
      matrix:
        linux:
          imageName: ubuntu-latest
        # TODO: RENABLE THIS
        # mac:
        #   imageName: macOS-latest
        #   demands: xcode
    timeoutInMinutes: ${{ parameters.TIMEOUT_MIN }}
    pool:
      vmImage: $(imageName)
    variables:
      - template: templates/vars.go.yml
        parameters:
          DEBUG: ${{ parameters.DEBUG }}
      - template: templates/vars.goreleaser.yml
        parameters:
          DEBUG: ${{ parameters.DEBUG }}
      - name: ARTIFACT_DIRECTORY
        value: ${{ parameters.workingDirectory }}/$(Build.Repository.Name)/.artifacts/goreleaser
    steps:
      #https://docs.microsoft.com/en-us/azure/devops/pipelines/scripts/git-commands?view=azure-devops&tabs=yaml#enable-scripts-to-run-git-commands
      - checkout: self
        fetchDepth: 0
        path: $(Build.Repository.Name)
      - task: thycotic-software.thycotic-dsv-task.thycotic-dsv-build-release-task.ThycoticDSV@0
        displayName: retrieve-cert
        inputs:
          ServerUrl: $(ServerUrl)
          ClientId: $(ClientId)
          ClientSecret: $(ClientSecret)
          SecretPath: ado/cli
      - template: templates/task-aqua-install.yml
        parameters:
          aquaInstallMethod: ''
          AQUA_GITHUB_TOKEN: $(AQUA_GITHUB_TOKEN)
      - template: templates/task-go-install.yml
      # This step only runs on macOS
      - task: InstallAppleCertificate@2
        displayName: macos-install-cert-to-keychain
        condition: eq(variables['Agent.OS'], 'Darwin')
        inputs:
          certSecureFile: $(certSecureFile)
          certPwd: $(cert.password)
          setUpPartitionIdACLForPrivateKey: false
      - template: templates/task-go-detect-vendoring.yml
        parameters:
          workingDirectory: ${{ parameters.workingDirectory }}/$(Build.Repository.Name)
      - template: templates/task-go-restore-go-cache.yml
        parameters:
          workingDirectory: ${{ parameters.workingDirectory }}/${{ parameters.workingDirectory }}
      - template: templates/task-go-mod-download.yml
        parameters:
          workingDirectory: ${{ parameters.workingDirectory }}/$(Build.Repository.Name)
      - template: templates/task-go-install-mage.yml
        parameters:
          workingDirectory: ${{ parameters.workingDirectory }}/$(Build.Repository.Name)
      - pwsh: |
          magebinary=$(which mage)
          &$magebinary init
        displayName: mage init
        workingDirectory: ${{ parameters.workingDirectory }}/$(Build.Repository.Name)
        failOnStderr: false
      - pwsh: |
          Write-Host ('[go] binary: {0} version: {1}' -f $(Get-Command go -ErrorAction SilentlyContinue).Path, [string]$(go version)) -ForegroundColor Gray
          Write-Host ('[mage] binary: {0} version: {1}' -f $(Get-Command mage -ErrorAction SilentlyContinue).Path, [string]$(mage -version)) -ForegroundColor Gray
          Write-Host ('[changie] binary: {0} version: {1}' -f $(Get-Command changie -ErrorAction SilentlyContinue).Path, [string]$(changie --version)) -ForegroundColor Gray
          magebinary=$(Get-Command mage -ErrorAction SilentlyContinue).Path
          changiebinary=$(Get-Command changie -ErrorAction SilentlyContinue).Path
          Write-Host "Changie Detected Version: [$(changie latest)]"
          &mage release
        displayName: mage release
        workingDirectory: ${{ parameters.workingDirectory }}/$(Build.Repository.Name)
        failOnStderr: false
        env:
          CERT_PASSWORD: $(cert.password)
          CERT_SECURE_FILE: $(certSecureFile)
      - task: PublishBuildArtifacts@1
        displayName: 'Build Artifact: PRTestBuilds'
        inputs:
          PathtoPublish: $(ARTIFACT_DIRECTORY)
          ArtifactName: ThrowAwayBuilds
