---
output:
  formats:
    - format: tab
linters-settings:
  misspell:
    locale: US

  nolintlint:
    allow-unused: false
    allow-no-explanation: []
    require-explanation: true
    require-specific: true
  gofumpt:
    extra-rules: true
  godox:
    keywords:
      - OPTIMIZE
      - HACK
      - TODO
      - BUG
      - FIXME
  godot:
    scope: all
    exclude:
      - //nolint
      - (API)
      - ^[ ]*@
    capital: true
  depguard:
    rules:
      main:
        deny:
          - pkg: 'github.com/sirupsen/logrus'
            desc: use zerolog
          - pkg: log
            desc: use zerolog
          - pkg: 'github.com/pkg/errors'
            desc: Should be replaced by standard lib errors package

    # gomodguard:
    #   blocked:
    #     modules:
    #       - github.com/sirupsen/logrus:
    #           recommendations:
    #             - internal/logging
    #           reason: logging is allowed only by zerolog. Please use zerolog
    #     local_replace_directives: false
  tagliatelle:
    case:
      use-field-name: true
      rules:
        json: snake
        yaml: kebab
        xml: camel
        bson: camel
        avro: snake
        mapstructure: kebab
  errcheck:
    check-type-assertions: true
    check-blank: false
    exclude-functions:
      - io/ioutil.ReadFile
      - io.Copy(*bytes.Buffer)
      - io.Copy(os.Stdout)
      - io.Closer.Close
      - io.Closer.Body.Close
  govet:
    enable-all: true
    disable:
      - fieldalignment
    settings:
      printf:
        funcs:
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
  varnamelen:
    max-distance: 15
    min-name-length: 3
    check-receiver: false
    check-return: false
    ignore-type-assert-ok: true
    ignore-map-index-ok: true
    ignore-chan-recv-ok: true
    ignore-names:
      - err
      - tt
      - i
      - x
      - id
      - b
      - ok
      - zl
      - fs

  revive:
    ignore-generated-header: true
    enable-all-rules: true
    rules:
      - name: var-naming
        severity: error
      - name: line-length-limit
        severity: warning
        arguments:
          - 400
      - name: function-length
        severity: warning
        arguments: [20, 5000]

linters:
  enable-all: true
  disable:
    - scopelint
    - paralleltest
    - noctx
    - wsl
    - lll
    - interfacer
    - golint
    - maligned
    - goimports
    - gci
    - gofmt
    - nlreturn
    - gofumpt
    - exhaustivestruct
    - exhaustruct
    - wrapcheck
    - godox
    - execinquery
    - nonamedreturns
    - forbidigo
    - structcheck
    - varcheck
    - deadcode
    - ifshort
    - godox
    - godot
    - nosnakecase
    - rowserrcheck # disabled due to generics, can enable in future if needed
    - sqlclosecheck # disabled due to generics, can enable in future if needed
    - wastedassign # disabled due to generics, can enable in future if needed
    - funlen #OVERRIDE: ok using for bot, lots of quick long commands i worked on
    - cyclop #OVERRIDE: ok using for bot, lots of quick long commands i worked on
    - gocognit #OVERRIDE: ok using for bot, lots of quick long commands i worked on

run:
  timeout: 5m
  build-tags:
    - mage
    - tools
    - integration
    - codeanalysis
issues:
  exclude-rules:
    - path: _test\.go
      linters:
        - goerr113
        - wrapcheck
        - funlen
        - cyclop
        - gocognit
        - unparam
        - varnamelen
        - revive
    - linters:
        - goerr113
      text: do not define dynamic errors
    - path: magefiles
      linters:
        - goerr113
        - wrapcheck
        - funlen
        - gocyclo
        - cyclop
        - gocognit
        - maintidx
        - deadcode
        - gochecknoglobals
    - path: magefile.go
      linters:
        - goerr113
        - wrapcheck
        - funlen
        - gocyclo
        - cyclop
        - gocognit
        - maintidx
        - deadcode
        - gochecknoglobals
    - linters:
        - goerr113
      text: magefiles don't need to worry about wrapping in the same way
    - linters:
        - govet
        - revive
      text: 'shadow: declaration of .err. shadows declaration'
    - path: mocks
      linters:
        - godot
      text: mocked files do not need to be checked
  whole-files: false
  exclude-dirs:
    - build
    - .artifacts
    - .cache
    - artifacts
    - .trunk
    - _tools
    - vendor
    - vendor$
